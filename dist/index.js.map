{"version":3,"sources":["webpack://mobx-form/webpack/universalModuleDefinition","webpack://mobx-form/webpack/bootstrap","webpack://mobx-form/./src/state/FieldState.js","webpack://mobx-form/external \"mobx\"","webpack://mobx-form/./src/util/FormContext.js","webpack://mobx-form/./src/state/ArrayFieldState.js","webpack://mobx-form/external \"react\"","webpack://mobx-form/./src/state/FlatArrayFieldState.js","webpack://mobx-form/./src/util/set.js","webpack://mobx-form/./src/util/get.js","webpack://mobx-form/external \"validatorjs\"","webpack://mobx-form/./src/util/buildFieldState.js","webpack://mobx-form/./src/state/FormState.js","webpack://mobx-form/./src/components/formConsumer.js","webpack://mobx-form/./src/util/getInitialValue.js","webpack://mobx-form/./src/util/isEqual.js","webpack://mobx-form/./src/components/Form.js","webpack://mobx-form/./src/index.js"],"names":["ID_COUNTER","FieldState","form","config","undefined","initialConfig","parent","rules","transform","debouncedFormValidate","key","adjacentFields","init","value","options","clearTimeout","setTimeout","removePristineState","pristine","validate","validateDebounceDurationMs","initialValue","defaultValue","setValue","_transformInValue","validateWithDebounce","e","target","invalidate","values","errors","name","attributeNames","label","model","validator","Validator","messages","setAttributeNames","check","get","placeholder","disabled","_transformOutValue","in","out","console","warn","remove","getValue","getInitialValue","length","hasError","observable","action","fieldStates","computed","ArrayFieldState","arrayName","originalName","fieldConfigs","filter","startsWith","clear","Array","isArray","forEach","add","currValue","onInit","insertIdx","fieldState","buildFieldState","splice","push","getFieldConfigs","fieldName","substring","fieldValue","endsWith","slice","fieldConfig","field","idxOrObject","findIndex","val","iterator","map","some","idx","row","at","Object","keys","dirty","invalidChildren","rowCounter","rowIdx","shouldExclude","rowValue","ignore","assign","includes","exclude","excludeChildren","ignoreChildren","every","FlatArrayFieldState","idxOrField","children","prototype","call","set","object","parts","split","currObj","i","reduce","acc","part","finalConfig","isComplexArray","FormState","onSubmit","onChange","onCancel","onRemove","fieldGroups","initialOptions","initialValues","collection","fields","permissions","groups","create","delete","edit","setModel","showPristineErrors","isNew","attributes","toJS","validationOnInit","submitted","reset","addField","setValues","find","f","configIdx","stateIdx","message","error","group","dirtyGroups","fieldNameRegex","RegExp","test","submitFn","getValues","modelValue","getField","option","invalid","getMatchingFields","valid","errorList","addToGroup","incomplete","concat","Component","props","isEqual","falseyEquivalents","value1","value2","val1","val1Keys","val2Keys","from","Set","Form","formWrapper","WrappedComponent","state","nextProps","prevState","FormWrapperComponent","getHandleSave","getHandleCancel","getHandleRemove","handleSave","save","handleCancel","clearSelection","handleRemove","destroy","formConsumer","FormContext"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mobx\"), require(\"react\"), require(\"validatorjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mobx\", \"react\", \"validatorjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mobx-form\"] = factory(require(\"mobx\"), require(\"react\"), require(\"validatorjs\"));\n\telse\n\t\troot[\"mobx-form\"] = factory(root[\"mobx\"], root[\"react\"], root[\"validatorjs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__8__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","import Validator from 'validatorjs';\nimport { action, computed, set, observable, toJS } from 'mobx';\n\nimport isEqual from '../util/isEqual';\nimport getInitialValue from '../util/getInitialValue';\n\nlet ID_COUNTER = 0;\n\nclass FieldState {\n  @observable defaultValue = '';\n  @observable disabled = false;\n  @observable errors = [];\n  @observable label;\n  @observable name;\n  @observable placeholder;\n  @observable pristine = true;\n  @observable readOnly = false;\n  @observable initialValue = undefined;\n  @observable value;\n  @observable validateDebounceDurationMs = 250;\n\n  key;\n  form = undefined;\n  initialConfig = undefined;\n  parent = undefined; // If it's part of an array field\n  rules = [];\n  transform = undefined;\n  debouncedFormValidate = undefined;\n\n  constructor(form, config) {\n    this.key = ++ID_COUNTER;\n    this.form = form;\n    this.initialConfig = config;\n\n    // we do this so that observable doesn't make copies. we want the actual reference to stick.\n    this.adjacentFields = this.initialConfig.adjacentFields;\n    delete this.initialConfig.adjacentFields;\n\n    // this extends this with initialConfig, where all keys become observables #FYI\n    set(this, this.initialConfig);\n\n    this.init(config.value);\n  }\n\n  validateWithDebounce(options = {}) {\n    if (this.debouncedFormValidate) {\n      clearTimeout(this.debouncedFormValidate);\n    }\n\n    this.debouncedFormValidate = setTimeout(\n      action(() => {\n        if (options.removePristineState === true) {\n          this.pristine = false;\n        }\n        this.form.validate();\n      }),\n      this.validateDebounceDurationMs\n    );\n  }\n\n  @action\n  init(value) {\n    set(this, this.initialConfig);\n\n    const initialValue = getInitialValue({ value, defaultValue: this.defaultValue });\n\n    this.setValue(initialValue, { validate: false });\n    this.initialValue = initialValue;\n    this.pristine = true;\n  }\n\n  @action\n  reset() {\n    const initialValue = toJS(this.initialValue);\n    this.init(initialValue);\n  }\n\n  @action\n  enable = () => {\n    this.disabled = false;\n  };\n\n  @action\n  disable = () => {\n    this.disabled = true;\n  };\n\n  @action\n  setPristine = value => {\n    this.pristine = value;\n  };\n\n  @action\n  setLabel = label => {\n    this.label = label;\n  };\n\n  @action\n  setRules = (rules, options = {}) => {\n    const { validate = true } = options;\n\n    this.rules = rules;\n\n    if (validate) {\n      this.form.validate();\n    }\n  };\n\n  @action\n  setFieldStates = fieldStates => {\n    this.fieldStates = fieldStates;\n    this.form.validate();\n  };\n\n  @action\n  setValue(value, options = {}) {\n    const { validate = true } = options;\n\n    this.value = this._transformInValue(toJS(value));\n\n    if (validate) {\n      this.validateWithDebounce();\n    }\n  }\n\n  @action\n  onChange(e) {\n    let value;\n\n    if (e && e.target) {\n      ({ value } = e.target);\n    } else {\n      value = e;\n    }\n\n    this.value = value;\n    this.form.invalidate('');\n    this.validateWithDebounce({ removePristineState: true });\n  }\n\n  @computed\n  get dirty() {\n    return !isEqual(this.getValue(), this.getInitialValue());\n  }\n\n  @computed\n  get hasError() {\n    return this.errors && this.errors.length > 0;\n  }\n\n  @computed\n  get valid() {\n    return !this.hasError;\n  }\n\n  @action\n  validate(values) {\n    if (!this.rules) {\n      this.errors = [];\n      return;\n    }\n\n    const rules = {\n      [this.name]: toJS(this.rules)\n    };\n\n    const attributeNames = {\n      [this.name]: this.label || this.name\n    };\n\n    const { model } = this.form;\n\n    const validator = new Validator({ model, ...values }, rules, this.messages);\n    validator.setAttributeNames(attributeNames);\n    validator.check();\n\n    this.errors = validator.errors.get(this.name);\n  }\n\n  @action\n  setServerErrors(errors) {\n    this.errors = errors;\n  }\n\n  getProps() {\n    return {\n      name: this.name,\n      value: this.value,\n      placeholder: this.placeholder,\n      disabled: this.disabled\n    };\n  }\n\n  getInitialValue() {\n    return toJS(this.initialValue);\n  }\n\n  getValue() {\n    return this._transformOutValue(toJS(this.value));\n  }\n\n  _transformInValue(value) {\n    return this.transform && this.transform.in ? this.transform.in(value, this.form, this) : value;\n  }\n\n  _transformOutValue(value) {\n    return this.transform && this.transform.out ? this.transform.out(value, this.form, this) : value;\n  }\n\n  @action\n  remove() {\n    if (!this.parent) {\n      console.warn('Calling remove() on a field with no parent', this.name);\n      return;\n    }\n\n    this.parent.remove(this);\n  }\n}\n\nexport default FieldState;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { createContext } from 'react';\n\nexport default createContext();\n","import { action, computed, observable, toJS } from 'mobx';\n\nimport FieldState from './FieldState';\nimport buildFieldState from '../util/buildFieldState';\nimport get from '../util/get';\nimport set from '../util/set';\n\nclass ArrayFieldState extends FieldState {\n  @observable fieldStates = [];\n  @observable invalidChildren = []; // The indices of invalid children\n\n  getFieldConfigs() {\n    const arrayName = `${this.initialConfig.originalName}[]`;\n    return this.form.fieldConfigs.filter(config => config.name.startsWith(arrayName));\n  }\n\n  @action\n  init(value) {\n    if (this.initialValue !== value) {\n      this.initialValue = this._transformInValue(toJS(value));\n      this.fieldStates.clear();\n\n      if (Array.isArray(value)) {\n        value.forEach(currValue => this.add(currValue, { validate: false, onInit: true }));\n      }\n    }\n  }\n\n  @action\n  add(value, options = {}) {\n    const { insertIdx, validate = true } = options;\n    const fieldState = this.buildFieldState(value, options);\n\n    if (insertIdx >= 0) {\n      this.fieldStates.splice(insertIdx, 0, fieldState);\n    } else {\n      this.fieldStates.push(fieldState);\n    }\n\n    if (validate) {\n      this.form.validate();\n    }\n\n    return fieldState;\n  }\n\n  @action\n  buildFieldState(value, options = {}) {\n    const { onInit = false } = options;\n    const fieldState = {};\n\n    this.getFieldConfigs().forEach(config => {\n      const fieldName = config.name.substring(this.initialConfig.originalName.length + 3);\n      const fieldValue = get(value, fieldName.endsWith('[]') ? fieldName.slice(0, -2) : fieldName);\n      const fieldConfig = { ...config };\n\n      if (onInit && fieldValue !== undefined) {\n        fieldConfig.value = fieldValue;\n      }\n\n      fieldConfig.parent = this;\n      fieldConfig.adjacentFields = fieldState;\n\n      const field = buildFieldState(this.form, fieldName, fieldConfig);\n\n      if (field) {\n        fieldState[field.name] = field;\n\n        if (!onInit && fieldValue !== undefined) {\n          field.setValue(fieldValue);\n        }\n      }\n    });\n\n    return fieldState;\n  }\n\n  @action\n  remove(idxOrObject) {\n    if (typeof idxOrObject === 'number') {\n      this.fieldStates.splice(idxOrObject, 1);\n    } else {\n      this.fieldStates.splice(this.fieldStates.findIndex(fieldState => fieldState === idxOrObject.adjacentFields), 1);\n    }\n    this.form.validate();\n  }\n\n  @action\n  setValue(value) {\n    this.fieldStates.clear();\n\n    if (Array.isArray(value)) {\n      value.forEach(val => this.add(val, { validate: false }));\n    }\n\n    this.validateWithDebounce();\n  }\n\n  @computed\n  get pristine() {\n    return this.fieldStates.every(row => Object.keys(row).every(fieldName => row[fieldName].pristine));\n  }\n\n  /**\n   * Usage:\n   * const field = form.getField('users');\n   *\n   * field.setValue([{ firstName: 'Aaron' }],[{ firstName: 'Dave'}]);\n   *\n   * field.fieldStates[1].firstName.setValue('Dave');\n   *\n   * const markup = field.map(({ firstName, lastName }, idx) => (\n   *   <fieldset>\n   *     <Field field={firstName}>\n   *       <Input />\n   *     </Field>\n   *     <Field field={lastName}>\n   *       <Input />\n   *     </Field>\n   *     <Button onClick={() => lastName.setValue('Something')} />\n   *     <RemoveButton onClick={() => field.remove(idx)} />\n   *   </fieldset>\n   *   <AddButton onClick={() => field.add()} />\n   * ));\n   */\n  map(iterator) {\n    return this.fieldStates.map(iterator);\n  }\n\n  forEach(iterator) {\n    this.fieldStates.forEach(iterator);\n  }\n\n  filter(iterator) {\n    return this.fieldStates.filter(iterator);\n  }\n\n  some(iterator) {\n    return this.fieldStates.some(iterator);\n  }\n\n  at(idx) {\n    return this.fieldStates[idx];\n  }\n\n  size() {\n    return this.fieldStates.length;\n  }\n\n  getDirtyAt(idx) {\n    const row = this.at(idx);\n    return Object.keys(row).some(fieldName => row[fieldName].dirty);\n  }\n\n  @action\n  validate(values) {\n    super.validate(values);\n\n    const invalidChildren = [];\n    let rowCounter = 0;\n\n    this.fieldStates.forEach((row, rowIdx) => {\n      if (this.shouldExclude(row)) {\n        return;\n      }\n\n      const rowValue = get(values, this.name)[rowCounter];\n      rowCounter += 1;\n\n      if (this.ignore(rowValue)) {\n        return;\n      }\n\n      Object.keys(row).forEach(fieldName => {\n        const field = row[fieldName];\n\n        field.validate(Object.assign({}, values, rowValue));\n\n        if (field.errors && field.errors.length > 0) {\n          this.errors.push(`${field.label} (${rowIdx + 1}): ${field.errors}`);\n          if (!invalidChildren.includes(rowIdx)) {\n            invalidChildren.push(rowIdx);\n          }\n        }\n      });\n    });\n\n    this.invalidChildren = invalidChildren;\n  }\n\n  shouldExclude(row) {\n    const rowValue = {};\n\n    Object.keys(row).forEach(fieldName => {\n      set(rowValue, fieldName, toJS(row[fieldName].getValue()));\n    });\n\n    return this.exclude(rowValue);\n  }\n\n  getValue(rowIdx) {\n    if (rowIdx >= 0) {\n      const row = this.fieldStates[rowIdx];\n      const rowValue = {};\n\n      Object.keys(row).forEach(fieldName => {\n        set(rowValue, fieldName, toJS(row[fieldName].getValue()));\n      });\n\n      return this.exclude(rowValue) ? undefined : rowValue;\n    }\n\n    const values = [];\n\n    this.fieldStates.forEach((row, idx) => {\n      const value = this.getValue(idx);\n\n      if (value) {\n        values.push(value);\n      }\n    });\n\n    return this._transformOutValue(values);\n  }\n\n  getInitialValue() {\n    // Note: this is only really meant for the purposes of dirty checks\n    // mileage may vary for other purposes\n    if (this.initialValue === undefined) {\n      return [];\n    }\n\n    return super.getInitialValue();\n  }\n\n  exclude(rowValue) {\n    return this.excludeChildren && this.excludeChildren(rowValue);\n  }\n\n  ignore(rowValue) {\n    if (!rowValue) {\n      return true;\n    }\n\n    return this.ignoreChildren && this.ignoreChildren(rowValue);\n  }\n}\n\nexport default ArrayFieldState;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import { action, computed } from 'mobx';\nimport Validator from 'validatorjs';\n\nimport FieldState from './FieldState';\nimport ArrayFieldState from './ArrayFieldState';\n\nclass FlatArrayFieldState extends ArrayFieldState {\n  @action\n  add(value, options = {}) {\n    const { validate = true } = options;\n    this.fieldStates.push(new FieldState(this.form, { ...this.initialConfig, value, parent: this }));\n    if (validate) {\n      this.form.validate();\n    }\n  }\n\n  @action\n  remove(idxOrField) {\n    let idx = idxOrField;\n\n    if (typeof idxOrField !== 'number') {\n      idx = this.fieldStates.findIndex(field => field === idxOrField);\n    }\n\n    super.remove(idx);\n    this.form.validate();\n  }\n\n  @action\n  clearValue() {\n    this.fieldStates.clear();\n    this.form.validate();\n  }\n\n  @action\n  setChildren(children) {\n    this.children = children;\n    this.form.validate();\n  }\n\n  @action\n  validate(values) {\n    FieldState.prototype.validate.call(this, values);\n\n    this.fieldStates.forEach((field, rowIdx) => {\n      const rowValue = this.getValue(rowIdx);\n\n      if (this.ignore(rowValue)) {\n        field.errors = [];\n        return;\n      }\n\n      const value = {\n        [field.name]: rowValue\n      };\n\n      const rules = {\n        [field.name]: this.children ? this.children.rules : this.rules\n      };\n\n      const attributeNames = {\n        [this.name]: this.label || this.name\n      };\n\n      const messages = this.children ? this.children.messages : {};\n\n      const validator = new Validator(value, rules, messages);\n      validator.setAttributeNames(attributeNames);\n      validator.check();\n\n      field.errors = validator.errors.get(field.name);\n\n      if (field.errors && field.errors.length > 0) {\n        this.errors.push(`${this.label} (${rowIdx + 1}): ${field.errors}`);\n      }\n    });\n  }\n\n  getValue(rowIdx) {\n    if (rowIdx >= 0) {\n      const rowValue = this.fieldStates[rowIdx].getValue();\n\n      return this.exclude(rowValue) ? undefined : rowValue;\n    }\n\n    return super.getValue();\n  }\n\n  @computed\n  get pristine() {\n    return this.fieldStates.every(field => field.pristine);\n  }\n\n  @computed\n  get hasError() {\n    return (this.errors && this.errors.length > 0) || this.fieldStates.some(row => row.hasError);\n  }\n}\n\nexport default FlatArrayFieldState;\n","/**\n * Simple version of _.set() to avoid the mostly useless dependency\n */\nexport default function set(object, field, value) {\n  if (!object || !field) {\n    return;\n  }\n\n  const parts = field.split('.');\n  let currObj = object;\n  let i = 0;\n  for (; i < parts.length - 1; i += 1) {\n    if (currObj) {\n      currObj = currObj[parts[i]];\n    }\n  }\n\n  if (currObj) {\n    currObj[parts[i]] = value;\n  }\n}\n","/**\n * Simple version of _.get() to avoid the mostly useless dependency\n */\nexport default function get(object, field) {\n  if (!object || !field) {\n    return null;\n  }\n\n  const parts = field.split('.');\n  return parts.reduce((acc, part) => acc && acc[part], object);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","import ArrayFieldState from '../state/ArrayFieldState';\nimport FieldState from '../state/FieldState';\nimport FlatArrayFieldState from '../state/FlatArrayFieldState';\n\nexport default function buildFieldState(form, fieldName, fieldConfig) {\n  let fieldState = null;\n\n  if (!fieldName.includes('[].')) {\n    const finalConfig = { ...fieldConfig, originalName: fieldConfig.name, name: fieldName };\n\n    if (fieldConfig.isComplexArray) {\n      // Array that will contain complex things\n      fieldState = new ArrayFieldState(form, finalConfig);\n    } else if (fieldName.endsWith('[]')) {\n      // Simple Array\n      finalConfig.name = fieldName.slice(0, -2);\n      fieldState = new FlatArrayFieldState(form, finalConfig);\n    } else {\n      // Simple Field\n      fieldState = new FieldState(form, finalConfig);\n    }\n  }\n\n  return fieldState;\n}\n","import { action, computed, observable, toJS } from 'mobx';\n\nimport buildFieldState from '../util/buildFieldState';\nimport get from '../util/get';\nimport set from '../util/set';\n\nclass FormState {\n  @observable fieldStates;\n  @observable error;\n  @observable errors = [];\n  @observable submitted = false;\n\n  onSubmit = () => console.warn('No onSubmit() provided');\n  onChange = () => {};\n  onCancel = () => {};\n  onRemove = () => {};\n\n  model;\n  collection;\n  fieldConfigs = [];\n  fieldGroups = {};\n  initialOptions = {};\n  options = {};\n  initialValues = {};\n\n  constructor(config) {\n    const { collection, options, fields, permissions, model, values, onSubmit, onChange, onCancel, onRemove } = config;\n\n    this.collection = collection;\n    this.options = options || {};\n    this.initialOptions = { ...this.options };\n    this.fieldConfigs = Object.keys(fields).map(name => ({ ...fields[name], name }));\n    this.fieldGroups = this.options.groups || {};\n    this.fieldStates = [];\n    this.permissions = Object.assign({ create: true, delete: true, edit: true }, permissions);\n\n    this.fieldConfigs.forEach(fieldConfig => {\n      const fieldState = buildFieldState(this, fieldConfig.name, fieldConfig);\n      if (fieldState) {\n        this.fieldStates.push(fieldState);\n      }\n    });\n\n    if (model) {\n      this.setModel(model);\n    }\n\n    if (values) {\n      this.init(values);\n    }\n\n    this.onSubmit = onSubmit || this.onSubmit;\n    this.onChange = onChange || this.onChange;\n    this.onCancel = onCancel || this.onCancel;\n    this.onRemove = onRemove || this.onRemove;\n  }\n\n  @action\n  setRules = (fieldState, rules) => {\n    this.fieldConfigs.forEach(fieldConfig => {\n      if (fieldState.initialConfig && fieldConfig.name === fieldState.initialConfig.originalName) {\n        fieldConfig.rules = rules;\n        fieldState.rules = rules;\n      }\n    });\n\n    this.validate();\n  };\n\n  @action\n  setModel(model) {\n    if (this.initialOptions.showPristineErrors === undefined) {\n      this.options.showPristineErrors = !model.isNew;\n    }\n\n    this.model = model;\n    this.init(model.attributes ? model.attributes.toJS() : toJS(model));\n  }\n\n  @action\n  init(values) {\n    this.fieldStates.forEach(field => field.init(get(values, field.name)));\n    this.initialValues = values;\n\n    if (this.options.validationOnInit !== false) {\n      this.validate();\n    }\n  }\n\n  @action\n  reset() {\n    this.submitted = false;\n    this.fieldStates.forEach(field => field.reset());\n\n    this.validate();\n  }\n\n  @action\n  addFields(config, values) {\n    Object.keys(config).forEach(fieldName =>\n      this.addField(fieldName, config[fieldName], undefined, { validate: false })\n    );\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  @action\n  addField(name, config, value, options = {}) {\n    if (!this.fieldStates.find(f => f.name === name)) {\n      const { validate = true } = options;\n      const fieldConfig = { ...config, name };\n      this.fieldConfigs.push(fieldConfig);\n      const fieldState = buildFieldState(this, name, { ...fieldConfig, value });\n      if (fieldState) {\n        this.fieldStates.push(fieldState);\n      }\n\n      if (validate) {\n        this.validate();\n      }\n    } else if (value) {\n      this.setValue(name, value, options);\n    }\n  }\n\n  @action\n  removeField(name) {\n    const configIdx = this.fieldConfigs.findIndex(config => config.name === name);\n    if (configIdx >= 0) {\n      this.fieldConfigs.splice(configIdx, 1);\n    } else {\n      console.warn(`Field config not found for field ${name}`);\n    }\n\n    const stateIdx = this.fieldStates.findIndex(field => field.name === name);\n    if (stateIdx >= 0) {\n      this.fieldStates.splice(stateIdx, 1);\n    } else {\n      console.warn(`Field config not found for field ${name}`);\n    }\n    this.validate();\n  }\n\n  @action\n  invalidate(message) {\n    this.error = message;\n  }\n\n  addFieldsToGroup(fields, group) {\n    Object.keys(fields).forEach(field => {\n      if (!this.fieldGroups[group].includes(field)) {\n        this.fieldGroups[group].push(field);\n      }\n    });\n  }\n\n  addToGroup(groups, group, field) {\n    if (Object.keys(groups).includes(group)) {\n      groups[group].push(field.name);\n    } else {\n      groups[group] = [field.name];\n    }\n\n    return groups;\n  }\n\n  isGroupDirty(group) {\n    return !!this.dirtyGroups[group];\n  }\n\n  getMatchingFields(fieldName) {\n    const fieldNameRegex = new RegExp(fieldName);\n    return this.fieldStates.filter(fieldState => fieldNameRegex.test(fieldState.name));\n  }\n\n  // Only returns groups that are not pristine and that are in error.\n  @computed\n  get invalidGroups() {\n    let invalid = {};\n\n    Object.keys(this.fieldGroups).forEach(group => {\n      this.fieldGroups[group].forEach(fieldName => {\n        this.getMatchingFields(fieldName).forEach(field => {\n          if (!field.valid && !field.pristine) {\n            if (field.isComplexArray) {\n              field.errors.forEach(error => {\n                const errorList = error.split(','); // This is done to handle nested complex array errors\n                errorList.forEach(() => {\n                  invalid = this.addToGroup(invalid, group, field);\n                });\n              });\n            } else {\n              invalid = this.addToGroup(invalid, group, field);\n            }\n          }\n        });\n      });\n    });\n\n    return invalid;\n  }\n\n  @computed\n  get dirtyGroups() {\n    let dirty = {};\n\n    Object.keys(this.fieldGroups).forEach(group => {\n      this.fieldGroups[group].forEach(fieldName => {\n        this.getMatchingFields(fieldName).forEach(field => {\n          if (field && field.dirty) {\n            dirty = this.addToGroup(dirty, group, field);\n          }\n        });\n      });\n    });\n\n    return dirty;\n  }\n\n  // Groups that have invalid values that aren't dirty because they are not yet filled out.\n  @computed\n  get incompleteGroups() {\n    let incomplete = {};\n\n    Object.keys(this.fieldGroups).forEach(group => {\n      this.fieldGroups[group].forEach(fieldName => {\n        this.getMatchingFields(fieldName).forEach(field => {\n          if (!field.valid && field.pristine) {\n            incomplete = this.addToGroup(incomplete, group, field);\n          }\n        });\n      });\n    });\n\n    return incomplete;\n  }\n\n  // Groups that are valid and complete.\n  @computed\n  get completeGroups() {\n    return Object.keys(this.fieldGroups).filter(group =>\n      this.fieldGroups[group].every(fieldName => this.getMatchingFields(fieldName).every(field => field.valid))\n    );\n  }\n\n  @computed\n  get dirty() {\n    return this.fieldStates.some(field => field.dirty);\n  }\n\n  @computed\n  get pristine() {\n    return this.fieldStates.every(field => field.pristine);\n  }\n\n  @computed\n  get valid() {\n    return this.fieldStates.every(field => field.valid);\n  }\n\n  @action\n  submit(onSubmit) {\n    this.error = null;\n    this.submitted = true;\n\n    const submitFn = onSubmit || this.onSubmit;\n    submitFn(this, this.getValues());\n  }\n\n  getField(fieldName) {\n    const field = this.fieldStates.find(f => f.name === fieldName);\n\n    if (!field) {\n      console.warn(`Field \"${fieldName}\" not found.`);\n    }\n\n    return field;\n  }\n\n  getFields() {\n    return this.fieldStates;\n  }\n\n  getOptionValue(fieldName, modelValue) {\n    const field = this.getField(fieldName);\n    if (!field) {\n      return false;\n    }\n\n    if (!field.options) {\n      console.warn(`Field \"${fieldName}\" has no options[], getOptionValue will return undefined\"`);\n      return undefined;\n    }\n\n    // Use the form's value if no specific value is requested\n    const value = modelValue !== undefined ? modelValue : field.getValue();\n\n    return field.options.find(option => option.value === value).label;\n  }\n\n  getValue(fieldName) {\n    const field = this.getField(fieldName);\n    if (!field) {\n      return false;\n    }\n\n    return this.getField(fieldName).getValue();\n  }\n\n  getValues() {\n    const values = {};\n    this.fieldStates.forEach(field => set(values, field.name, field.getValue()));\n    return values;\n  }\n\n  getDirtyValues() {\n    const values = {};\n    this.fieldStates.forEach(field => (field.dirty ? set(values, field.name, field.getValue()) : null));\n    return values;\n  }\n\n  getDirtyFields() {\n    return this.fieldStates.filter(field => field.dirty);\n  }\n\n  getFieldGroupValues(group) {\n    const values = {};\n    this.fieldStates.forEach(field => {\n      if (this.fieldGroups[group].includes(field.name)) {\n        set(values, field.name, field.getValue());\n      }\n    });\n\n    return values;\n  }\n\n  setValue(fieldName, value, options) {\n    this.getField(fieldName).setValue(value, options);\n  }\n\n  @action\n  resetFormState = () => {\n    this.submitted = false;\n    this.fieldStates = [];\n    this.fieldConfigs = [];\n    this.fieldGroups = {};\n    this.initialOptions = {};\n    this.options = {};\n    this.initialValues = {};\n  };\n\n  @action\n  setValues(values) {\n    Object.keys(values).forEach(fieldName => this.setValue(fieldName, values[fieldName], { validate: false }));\n    this.validate();\n  }\n\n  @action\n  validate = () => {\n    this.errors = [];\n\n    const values = this.getValues();\n\n    this.fieldStates.forEach(field => {\n      field.validate(values);\n\n      if (field.errors.length) {\n        this.errors = this.errors.concat(field.errors);\n      }\n    });\n\n    return this.valid;\n  };\n}\n\nexport default FormState;\n","import React from 'react';\n\nimport FormContext from '../util/FormContext';\n\nexport default function(Component) {\n  return props => <FormContext.Consumer>{form => <Component {...props} form={form} />}</FormContext.Consumer>;\n}\n","export default function getInitialValue({ value, defaultValue }) {\n  const initialValue = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  return value !== undefined && value !== null ? value : initialValue;\n}\n","const falseyEquivalents = [null, undefined, ''];\n\n/**\n * Non-strict-ish, deep comparison to replace strict _.isEqual() behavior.\n *\n * This has one intentional limitation specific to FieldState usage:\n *   null, undefined and empty string values are treated as equal.\n */\nexport default function isEqual(value1, value2) {\n  if (Array.isArray(value1) && Array.isArray(value2)) {\n    return value1.length === value2.length && value1.every((val1, idx) => isEqual(val1, value2[idx]));\n  } else if (typeof value1 === 'object' && typeof value2 === 'object') {\n    const val1Keys = Object.keys(value1 || {});\n    const val2Keys = Object.keys(value2 || {});\n    const keys = Array.from(new Set(val1Keys.concat(val2Keys)));\n\n    return keys.every(key => isEqual(value1[key], value2[key]));\n  }\n\n  return value1 === value2 || (falseyEquivalents.includes(value1) && falseyEquivalents.includes(value2));\n}\n","import React, { Component } from 'react';\n\nimport FormState from '../state/FormState';\nimport FormContext from '../util/FormContext';\n\nfunction Form({ fields, options = {} }) {\n  return function formWrapper(WrappedComponent) {\n    return class FormWrapperComponent extends Component {\n      state = {};\n\n      static getDerivedStateFromProps(nextProps, prevState) {\n        const { onChange, permissions, model, values } = nextProps;\n\n        if (!prevState.form) {\n          const onSubmit = FormWrapperComponent.getHandleSave(nextProps);\n          const onCancel = FormWrapperComponent.getHandleCancel(nextProps);\n          const onRemove = FormWrapperComponent.getHandleRemove(nextProps);\n\n          const form = new FormState({\n            model,\n            values,\n            fields,\n            options,\n            permissions,\n            onChange,\n            onSubmit,\n            onCancel,\n            onRemove\n          });\n\n          return { form };\n        }\n\n        const { form } = prevState;\n\n        if (nextProps.model && nextProps.model !== form.model) {\n          form.setModel(nextProps.model);\n        }\n\n        if (nextProps.values !== form.values) {\n          form.init(nextProps.values);\n        }\n\n        return { form };\n      }\n\n      static getHandleSave(props) {\n        const { handleSave } = props;\n\n        return (form, values) => {\n          if (handleSave) {\n            return handleSave(values);\n          }\n\n          return form.model.save(values);\n        };\n      }\n\n      static getHandleCancel(props) {\n        const { handleCancel } = props;\n\n        return form => {\n          if (handleCancel) {\n            handleCancel();\n          } else if (form.collection) {\n            form.collection.clearSelection();\n          }\n        };\n      }\n\n      static getHandleRemove(props) {\n        const { handleRemove } = props;\n\n        return form => {\n          if (handleRemove) {\n            return handleRemove();\n          }\n\n          return form.model.destroy();\n        };\n      }\n\n      render() {\n        const { form } = this.state;\n\n        if (!form) {\n          return null;\n        }\n\n        const { onSubmit, onCancel, onRemove } = form;\n\n        return (\n          <FormContext.Provider value={form}>\n            <WrappedComponent\n              {...this.props}\n              form={form}\n              handleSave={onSubmit}\n              handleCancel={onCancel}\n              handleRemove={onRemove}\n            />\n          </FormContext.Provider>\n        );\n      }\n    };\n  };\n}\n\nexport default Form;\n","import Form from './components/Form';\nimport formConsumer from './components/formConsumer';\n\nimport FormState from './state/FormState';\nimport FieldState from './state/FieldState';\nimport ArrayFieldState from './state/ArrayFieldState';\nimport FlatArrayFieldState from './state/FlatArrayFieldState';\n\nimport FormContext from './util/FormContext';\n\nexport { Form, formConsumer, FormState, FieldState, ArrayFieldState, FlatArrayFieldState, FormContext };\n"],"sourceRoot":""}